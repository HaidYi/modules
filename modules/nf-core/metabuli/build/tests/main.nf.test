nextflow_process {

    name "Test Process METABULI_BUILD"
    script "../main.nf"
    process "METABULI_BUILD"

    tag "modules"
    tag "modules_nfcore"
    tag "metabuli"
    tag "metabuli/build"
    
    
    // setup {
    //     run("GUNZIP") {
    //         script "modules/nf-core/gunzip/main.nf"
    //         process {
    //             """
    //             input[0] = Channel.of([
    //                 [],
    //                 file(
    //                     params.modules_testdata_base_path + "genomics/sarscov2/metagenome/prot.accession2taxid.gz",
    //                     checkIfExists: true
    //                 )
    //             ])
    //             """
    //         }
    //     }
    // }


    test("sarscov2 - sarscov2 DNA and AA") {



        when {
            process {
                """
                
                input[0] = [
                    [ id:'test' ],
                        [
                        file(params.modules_testdata_base_path + "genomics/sarscov2/genome/genome.fasta", checkIfExists: true)
                        ]
                    ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/metagenome/prot_names.dmp', checkIfExists: true)
                input[2] = file(params.modules_testdata_base_path +'genomics/sarscov2/metagenome/prot_nodes.dmp', checkIfExists: true)
                input[3] = [] // needs a merged.dmp
                input[4] = file(params.modules_testdata_base_path + 'delete_me/metabuli/acc2taxid', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                // { assert snapshot(process.out).match() }
            )
        }

    }

}
