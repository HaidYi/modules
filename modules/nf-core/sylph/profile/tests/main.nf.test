nextflow_process {

    name "Test Process SYLPH_PROFILE"
    script "../main.nf"
    process "SYLPH_PROFILE"
    tag "modules"
    tag "modules_nfcore"
    tag "sylph"
    tag "sylph/profile"

    test("sarscov2 illumina single-end [fastq_gz]") {
        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match("versions_single") },
                { assert process.out.profile_out.get(0).size() > 1 }
            )
        }
    }

    test("sarscov2 illumina paired-end [fastq_gz]") {
        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match("versions_paired") },
                { assert process.out.profile_out.get(0).size() > 1 }
            )
        }
    }

    test("sarscov2 illumina paired-end [fastq_gz]-stub") {
        options "-stub"

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
